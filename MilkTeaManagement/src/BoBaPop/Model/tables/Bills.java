/*
 * This file is generated by jOOQ.
*/
package BoBaPop.Model.tables;


import BoBaPop.Model.DbMilktea;
import BoBaPop.Model.Indexes;
import BoBaPop.Model.Keys;
import BoBaPop.Model.tables.records.BillsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * InnoDB free: 23552 kB; (`TableID`) REFER `db_milktea/tables`(`TableID`)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bills extends TableImpl<BillsRecord> {

    private static final long serialVersionUID = 2114806763;

    /**
     * The reference instance of <code>db_milktea.bills</code>
     */
    public static final Bills BILLS = new Bills();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillsRecord> getRecordType() {
        return BillsRecord.class;
    }

    /**
     * The column <code>db_milktea.bills.BillID</code>.
     */
    public final TableField<BillsRecord, Integer> BILLID = createField("BillID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_milktea.bills.OrderTime</code>.
     */
    public final TableField<BillsRecord, Timestamp> ORDERTIME = createField("OrderTime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_milktea.bills.GrandTotal</code>.
     */
    public final TableField<BillsRecord, Double> GRANDTOTAL = createField("GrandTotal", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>db_milktea.bills.IsPaid</code>.
     */
    public final TableField<BillsRecord, Byte> ISPAID = createField("IsPaid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_milktea.bills.IsStaying</code>.
     */
    public final TableField<BillsRecord, Byte> ISSTAYING = createField("IsStaying", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_milktea.bills.TableID</code>.
     */
    public final TableField<BillsRecord, Integer> TABLEID = createField("TableID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>db_milktea.bills</code> table reference
     */
    public Bills() {
        this(DSL.name("bills"), null);
    }

    /**
     * Create an aliased <code>db_milktea.bills</code> table reference
     */
    public Bills(String alias) {
        this(DSL.name(alias), BILLS);
    }

    /**
     * Create an aliased <code>db_milktea.bills</code> table reference
     */
    public Bills(Name alias) {
        this(alias, BILLS);
    }

    private Bills(Name alias, Table<BillsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bills(Name alias, Table<BillsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "InnoDB free: 23552 kB; (`TableID`) REFER `db_milktea/tables`(`TableID`)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMilktea.DB_MILKTEA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BILLS_PRIMARY, Indexes.BILLS_TABLEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BillsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BILLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillsRecord> getPrimaryKey() {
        return Keys.KEY_BILLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillsRecord>> getKeys() {
        return Arrays.<UniqueKey<BillsRecord>>asList(Keys.KEY_BILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bills as(String alias) {
        return new Bills(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bills as(Name alias) {
        return new Bills(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bills rename(String name) {
        return new Bills(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Bills rename(Name name) {
        return new Bills(name, null);
    }
}
