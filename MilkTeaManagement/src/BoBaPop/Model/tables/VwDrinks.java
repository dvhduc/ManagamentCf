/*
 * This file is generated by jOOQ.
*/
package BoBaPop.Model.tables;


import BoBaPop.Model.DbMilktea;
import BoBaPop.Model.tables.records.VwDrinksRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VwDrinks extends TableImpl<VwDrinksRecord> {

    private static final long serialVersionUID = -95556642;

    /**
     * The reference instance of <code>db_milktea.vw_drinks</code>
     */
    public static final VwDrinks VW_DRINKS = new VwDrinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VwDrinksRecord> getRecordType() {
        return VwDrinksRecord.class;
    }

    /**
     * The column <code>db_milktea.vw_drinks.DrinkID</code>.
     */
    public final TableField<VwDrinksRecord, Integer> DRINKID = createField("DrinkID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_milktea.vw_drinks.DrinkName</code>.
     */
    public final TableField<VwDrinksRecord, String> DRINKNAME = createField("DrinkName", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>db_milktea.vw_drinks.DrinkTypeID</code>.
     */
    public final TableField<VwDrinksRecord, Integer> DRINKTYPEID = createField("DrinkTypeID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>db_milktea.vw_drinks</code> table reference
     */
    public VwDrinks() {
        this(DSL.name("vw_drinks"), null);
    }

    /**
     * Create an aliased <code>db_milktea.vw_drinks</code> table reference
     */
    public VwDrinks(String alias) {
        this(DSL.name(alias), VW_DRINKS);
    }

    /**
     * Create an aliased <code>db_milktea.vw_drinks</code> table reference
     */
    public VwDrinks(Name alias) {
        this(alias, VW_DRINKS);
    }

    private VwDrinks(Name alias, Table<VwDrinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private VwDrinks(Name alias, Table<VwDrinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMilktea.DB_MILKTEA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VwDrinks as(String alias) {
        return new VwDrinks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VwDrinks as(Name alias) {
        return new VwDrinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VwDrinks rename(String name) {
        return new VwDrinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VwDrinks rename(Name name) {
        return new VwDrinks(name, null);
    }
}
