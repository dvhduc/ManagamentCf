/*
 * This file is generated by jOOQ.
*/
package BoBaPop.Model.tables.records;


import BoBaPop.Model.tables.Items;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * InnoDB free: 23552 kB; (`BillID`) REFER `db_milktea/bills`(`BillID`); (`DrinkID`
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemsRecord extends UpdatableRecordImpl<ItemsRecord> implements Record4<Integer, Integer, Integer, Double> {

    private static final long serialVersionUID = 1244976277;

    /**
     * Setter for <code>db_milktea.items.BillID</code>.
     */
    public void setBillid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_milktea.items.BillID</code>.
     */
    public Integer getBillid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db_milktea.items.DrinkID</code>.
     */
    public void setDrinkid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_milktea.items.DrinkID</code>.
     */
    public Integer getDrinkid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>db_milktea.items.Quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_milktea.items.Quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>db_milktea.items.Total</code>.
     */
    public void setTotal(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_milktea.items.Total</code>.
     */
    public Double getTotal() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Items.ITEMS.BILLID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Items.ITEMS.DRINKID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Items.ITEMS.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Items.ITEMS.TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getBillid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDrinkid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBillid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDrinkid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value1(Integer value) {
        setBillid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value2(Integer value) {
        setDrinkid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value3(Integer value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord value4(Double value) {
        setTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemsRecord values(Integer value1, Integer value2, Integer value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemsRecord
     */
    public ItemsRecord() {
        super(Items.ITEMS);
    }

    /**
     * Create a detached, initialised ItemsRecord
     */
    public ItemsRecord(Integer billid, Integer drinkid, Integer quantity, Double total) {
        super(Items.ITEMS);

        set(0, billid);
        set(1, drinkid);
        set(2, quantity);
        set(3, total);
    }
}
